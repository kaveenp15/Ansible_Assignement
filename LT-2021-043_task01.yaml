-name: Create an instance
  hosts: localhost
  gather_facts: no
  vars:
      gcp_project: my-project
      gcp_cred_kind: serviceaccount
      gcp_cred_file: /home/kaveenp/my_account.json
      zone: "us-central1-a"
      region: "us-central1"

  tasks:
   - name: create disk for vm-1
     gcp_compute_disk:
         name: 'disk-instance1'
         size_gb: 30
         source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk1
   
   - name: create disk for vm-2
     gcp_compute_disk:
         name: 'disk-instance2'
         size_gb: 30
         source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk2

   - name: create address for vm-1
     gcp_compute_address:
         name: 'address-instance1'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address1

   - name: create address for vm-2
     gcp_compute_address:
         name: 'address-instance2'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address2

   - name: create instance for vm-1
     gcp_compute_instance:
         state: present
         name:  web-ans-1
         machine_type: e2-small
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk1 }}"
         network_interfaces:
             - network: null # use default
               access_configs:
                 - name: 'External NAT'
                   nat_ip: "{{ address1 }}"
                   type: 'ONE_TO_ONE_NAT'
         tags:
           items:
             - http-server
             - https-server
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance1

   - name: create a instance for vm-2
     gcp_compute_instance:
         state: present
         name:  web-ans-2
         machine_type: e2-small
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk2 }}"
         network_interfaces:
             - network: null # use default
               access_configs:
                 - name: 'External NAT'
                   nat_ip: "{{ address2 }}"
                   type: 'ONE_TO_ONE_NAT'
         tags:
           items:
             - http-server
             - https-server
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance2

   - name: Wait for SSH to come up
     wait_for: host={{ address1.address }} port=22 delay=15 state=started timeout=400

   - name: Add host to groupname
     add_host: hostname={{ address1.address }} groupname=new_instances

   - name: Wait for SSH to come up
     wait_for: host={{ address2.address }} port=22 delay=15 state=started timeout=400
   - name: Add host to groupname
     add_host: hostname={{ address2.address }} groupname=new_instances



- name: Manage new instances
  hosts: new_instances
  connection: ssh
  become: True
  tasks:
    - name:  install apache2
      apt:
        name:  apache2
        state:  latest
    - name:  Start httpd
      service:
        name:  apache2
        state:  started
        enabled:  yes
    - name: Copy index file
      template:
        src: index.my
        dest: /var/www/html/index.html
      notify:
        - restart httpd
    - name: allow from firewall
      shell:
         "ufw allow 80"

  handlers:
    - name: restart httpd
      service:
        name:  apache2
        state:  restarted
